services:
  #
  # Django – Produção (Daphne)
  #
  web:
    build:
      context: ./server-pong
      target: production       # <--- estágio de produção
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=setup.settings
    depends_on:
      - db
      - redis

  #
  # React – Produção (Build estático + Nginx)
  #
  # Aqui há duas abordagens:
  # 1) Imagem final do Dockerfile "production" (que já é Nginx servindo dist).
  # 2) Usar a imagem final "build" e montar com outro container Nginx.
  #
  # Exemplo: Se o Dockerfile do React já termina com FROM nginx:alpine:
  frontend:
    build:
      context: ./client-pong
      target: production       # <--- estágio de produção
    ports:
      - "80:80"
    depends_on:
      - web

  #
  # Banco de Dados PostgreSQL
  #
  db:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always

  #
  # Redis
  #
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

#
# Volumes – (Em produção, podem ser apenas para dados do DB, logs, etc.)
#
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
