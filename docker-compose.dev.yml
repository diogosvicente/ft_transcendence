services:
  #
  # Django (Desenvolvimento) - hot reload com runserver
  #
  web:
    build:
      context: ./server-pong
      target: development  # Usa o estágio "development" do Dockerfile
    # Monte o diretório do código em /app, se quiser hot reload imediato
    volumes:
      - django_app_data:/app
      - django_static_data:/app/staticfiles
      - django_media_data:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=setup.settings
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  #
  # React (Desenvolvimento) - hot reload com Vite
  #
  frontend:
    build:
      context: ./client-pong
      target: development  # Usa o estágio "development" do Dockerfile
    # Monte o diretório do código em /app, se quiser hot reload imediato
    volumes:
      - react_app_data:/app
    ports:
      - "3000:3000"
    depends_on:
      - web
      - db

  #
  # Nginx - Opcional em Dev (caso queira testar roteamento/SSL)
  #
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./server-pong/certs:/etc/nginx/certs
      - django_static_data:/app/staticfiles
      - django_media_data:/app/media
    ports:
      - "8080:80"    # HTTP
      - "4443:443"   # HTTPS
    depends_on:
      - web
      - frontend

  #
  # Postgres
  #
  db:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always

  #
  # Redis
  #
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

#
# Volumes em /goinfre/${USER} para persistência de dados e hot reload
#
volumes:
  django_app_data:
    driver: local
    driver_opts:
      type: none
      device: "/goinfre/${USER}/ft_transcendence/django_app"
      o: bind
  django_static_data:
    driver: local
    driver_opts:
      type: none
      device: "/goinfre/${USER}/ft_transcendence/staticfiles"
      o: bind
  django_media_data:
    driver: local
    driver_opts:
      type: none
      device: "/goinfre/${USER}/ft_transcendence/media"
      o: bind
  react_app_data:
    driver: local
    driver_opts:
      type: none
      device: "/goinfre/${USER}/ft_transcendence/react_app"
      o: bind
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: "/goinfre/${USER}/ft_transcendence/postgres_data"
      o: bind
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: "/goinfre/${USER}/ft_transcendence/redis_data"
      o: bind
